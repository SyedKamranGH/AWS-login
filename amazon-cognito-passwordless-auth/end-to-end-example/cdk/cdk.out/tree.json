{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "skgo": {
        "id": "skgo",
        "path": "skgo",
        "children": {
          "ExampleSpaBucket": {
            "id": "ExampleSpaBucket",
            "path": "skgo/ExampleSpaBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "skgo/ExampleSpaBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketEncryption": {
                      "serverSideEncryptionConfiguration": [
                        {
                          "serverSideEncryptionByDefault": {
                            "sseAlgorithm": "AES256"
                          }
                        }
                      ]
                    },
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    },
                    "tags": [
                      {
                        "key": "aws-cdk:auto-delete-objects",
                        "value": "true"
                      }
                    ],
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.CfnBucket",
                  "version": "2.102.0"
                }
              },
              "Policy": {
                "id": "Policy",
                "path": "skgo/ExampleSpaBucket/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/ExampleSpaBucket/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "ExampleSpaBucketB0F9E86E"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:DeleteObject*",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:PutBucketPolicy"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "ExampleSpaBucketB0F9E86E",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "ExampleSpaBucketB0F9E86E",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": "s3:*",
                              "Condition": {
                                "Bool": {
                                  "aws:SecureTransport": "false"
                                }
                              },
                              "Effect": "Deny",
                              "Principal": {
                                "AWS": "*"
                              },
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "ExampleSpaBucketB0F9E86E",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "ExampleSpaBucketB0F9E86E",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ],
                              "Sid": "EnforceTLS"
                            },
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": {
                                "CanonicalUser": {
                                  "Fn::GetAtt": [
                                    "ExampleSpaOAI458E1D3F",
                                    "S3CanonicalUserId"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "ExampleSpaBucketB0F9E86E",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.CfnBucketPolicy",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3.BucketPolicy",
                  "version": "2.102.0"
                }
              },
              "AutoDeleteObjectsCustomResource": {
                "id": "AutoDeleteObjectsCustomResource",
                "path": "skgo/ExampleSpaBucket/AutoDeleteObjectsCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "skgo/ExampleSpaBucket/AutoDeleteObjectsCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_s3.Bucket",
              "version": "2.102.0"
            }
          },
          "Custom::S3AutoDeleteObjectsCustomResourceProvider": {
            "id": "Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "path": "skgo/Custom::S3AutoDeleteObjectsCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "skgo/Custom::S3AutoDeleteObjectsCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.102.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "skgo/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.102.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "skgo/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.102.0"
            }
          },
          "ExampleSpaOAI": {
            "id": "ExampleSpaOAI",
            "path": "skgo/ExampleSpaOAI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "skgo/ExampleSpaOAI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
                  "aws:cdk:cloudformation:props": {
                    "cloudFrontOriginAccessIdentityConfig": {
                      "comment": "Allows CloudFront to reach the bucket"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnCloudFrontOriginAccessIdentity",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.OriginAccessIdentity",
              "version": "2.102.0"
            }
          },
          "HeadersExampleSpa": {
            "id": "HeadersExampleSpa",
            "path": "skgo/HeadersExampleSpa",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "skgo/HeadersExampleSpa/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::ResponseHeadersPolicy",
                  "aws:cdk:cloudformation:props": {
                    "responseHeadersPolicyConfig": {
                      "name": "skgoHeadersExampleSpa96BBEF9F",
                      "securityHeadersConfig": {
                        "contentSecurityPolicy": {
                          "contentSecurityPolicy": "default-src 'self'; font-src 'self' data:; connect-src 'self' https://*.amazonaws.com https://*.amazoncognito.com; img-src *;",
                          "override": true
                        },
                        "contentTypeOptions": {
                          "override": true
                        },
                        "frameOptions": {
                          "frameOption": "DENY",
                          "override": true
                        },
                        "referrerPolicy": {
                          "referrerPolicy": "same-origin",
                          "override": true
                        },
                        "strictTransportSecurity": {
                          "includeSubdomains": true,
                          "override": true,
                          "preload": true,
                          "accessControlMaxAge": {
                            "amount": 365,
                            "unit": {
                              "label": "days",
                              "isoLabel": "D",
                              "inMillis": 86400000
                            }
                          },
                          "accessControlMaxAgeSec": 31536000
                        },
                        "xssProtection": {
                          "override": true,
                          "protection": true,
                          "modeBlock": true
                        }
                      }
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnResponseHeadersPolicy",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.ResponseHeadersPolicy",
              "version": "2.102.0"
            }
          },
          "ExampleSpaDistribution": {
            "id": "ExampleSpaDistribution",
            "path": "skgo/ExampleSpaDistribution",
            "children": {
              "Origin1": {
                "id": "Origin1",
                "path": "skgo/ExampleSpaDistribution/Origin1",
                "constructInfo": {
                  "fqn": "constructs.Construct",
                  "version": "10.3.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "skgo/ExampleSpaDistribution/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFront::Distribution",
                  "aws:cdk:cloudformation:props": {
                    "distributionConfig": {
                      "enabled": true,
                      "origins": [
                        {
                          "domainName": {
                            "Fn::GetAtt": [
                              "ExampleSpaBucketB0F9E86E",
                              "RegionalDomainName"
                            ]
                          },
                          "id": "skgoExampleSpaDistributionOrigin15F241291",
                          "s3OriginConfig": {
                            "originAccessIdentity": {
                              "Fn::Join": [
                                "",
                                [
                                  "origin-access-identity/cloudfront/",
                                  {
                                    "Ref": "ExampleSpaOAI458E1D3F"
                                  }
                                ]
                              ]
                            }
                          }
                        }
                      ],
                      "defaultCacheBehavior": {
                        "pathPattern": "*",
                        "targetOriginId": "skgoExampleSpaDistributionOrigin15F241291",
                        "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                        "compress": true,
                        "responseHeadersPolicyId": {
                          "Ref": "HeadersExampleSpaB3420FFC"
                        },
                        "viewerProtocolPolicy": "redirect-to-https"
                      },
                      "customErrorResponses": [
                        {
                          "errorCode": 403,
                          "responseCode": 403,
                          "responsePagePath": "/index.html"
                        }
                      ],
                      "defaultRootObject": "index.html",
                      "httpVersion": "http2",
                      "ipv6Enabled": true
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cloudfront.CfnDistribution",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cloudfront.Distribution",
              "version": "2.102.0"
            }
          },
          "Passwordless": {
            "id": "Passwordless",
            "path": "skgo/Passwordless",
            "children": {
              "KmsKeyRsaPasswordless": {
                "id": "KmsKeyRsaPasswordless",
                "path": "skgo/Passwordless/KmsKeyRsaPasswordless",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/Passwordless/KmsKeyRsaPasswordless/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                      "aws:cdk:cloudformation:props": {
                        "keyPolicy": {
                          "Statement": [
                            {
                              "NotAction": "kms:Sign",
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":root"
                                    ]
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": "kms:Sign",
                              "Condition": {
                                "StringLike": {
                                  "kms:RequestAlias": "alias/Passwordless-skgo"
                                }
                              },
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PasswordlessCreateAuthChallengePasswordlessServiceRoleF563E878",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":kms:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":key/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "keySpec": "RSA_2048",
                        "keyUsage": "SIGN_VERIFY"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_kms.CfnKey",
                      "version": "2.102.0"
                    }
                  },
                  "Alias": {
                    "id": "Alias",
                    "path": "skgo/Passwordless/KmsKeyRsaPasswordless/Alias",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "skgo/Passwordless/KmsKeyRsaPasswordless/Alias/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::KMS::Alias",
                          "aws:cdk:cloudformation:props": {
                            "aliasName": "alias/Passwordless-skgo",
                            "targetKeyId": {
                              "Fn::GetAtt": [
                                "PasswordlessKmsKeyRsaPasswordlessF6E37D60",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_kms.CfnAlias",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_kms.Alias",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_kms.Key",
                  "version": "2.102.0"
                }
              },
              "PreSignupPasswordless": {
                "id": "PreSignupPasswordless",
                "path": "skgo/Passwordless/PreSignupPasswordless",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "skgo/Passwordless/PreSignupPasswordless/ServiceRole",
                    "children": {
                      "ImportServiceRole": {
                        "id": "ImportServiceRole",
                        "path": "skgo/Passwordless/PreSignupPasswordless/ServiceRole/ImportServiceRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.102.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "skgo/Passwordless/PreSignupPasswordless/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.102.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "skgo/Passwordless/PreSignupPasswordless/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "skgo/Passwordless/PreSignupPasswordless/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.102.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "skgo/Passwordless/PreSignupPasswordless/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.102.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/Passwordless/PreSignupPasswordless/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "architectures": [
                          "arm64"
                        ],
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "fa5673e37e6c8d10803792149b43df2cc0264807cb244bbc472f61b52bb1c1bf.zip"
                        },
                        "environment": {
                          "variables": {
                            "LOG_LEVEL": "DEBUG",
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "role": {
                          "Fn::GetAtt": [
                            "PasswordlessPreSignupPasswordlessServiceRoleEA5CBD7C",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs18.x"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
                  "version": "2.102.0"
                }
              },
              "CreateAuthChallengePasswordless": {
                "id": "CreateAuthChallengePasswordless",
                "path": "skgo/Passwordless/CreateAuthChallengePasswordless",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "skgo/Passwordless/CreateAuthChallengePasswordless/ServiceRole",
                    "children": {
                      "ImportServiceRole": {
                        "id": "ImportServiceRole",
                        "path": "skgo/Passwordless/CreateAuthChallengePasswordless/ServiceRole/ImportServiceRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.102.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "skgo/Passwordless/CreateAuthChallengePasswordless/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.102.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "skgo/Passwordless/CreateAuthChallengePasswordless/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "skgo/Passwordless/CreateAuthChallengePasswordless/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:ConditionCheckItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:GetItem",
                                        "dynamodb:GetRecords",
                                        "dynamodb:GetShardIterator",
                                        "dynamodb:PutItem",
                                        "dynamodb:Query",
                                        "dynamodb:Scan",
                                        "dynamodb:UpdateItem"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "SecretsTablePasswordless8B664A61",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Ref": "AWS::NoValue"
                                        }
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:ConditionCheckItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:GetItem",
                                        "dynamodb:GetRecords",
                                        "dynamodb:GetShardIterator",
                                        "dynamodb:Query",
                                        "dynamodb:Scan"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Fido2AuthenticatorsTablePasswordlessBDEAEEE6",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Fido2AuthenticatorsTablePasswordlessBDEAEEE6",
                                                  "Arn"
                                                ]
                                              },
                                              "/index/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "ses:SendEmail",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ses:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":identity/*"
                                          ]
                                        ]
                                      }
                                    },
                                    {
                                      "Action": "SNS:Publish",
                                      "Effect": "Allow",
                                      "NotResource": "arn:aws:sns:*:*:*"
                                    },
                                    {
                                      "Action": "kms:Sign",
                                      "Condition": {
                                        "StringLike": {
                                          "kms:RequestAlias": "alias/Passwordless-skgo"
                                        }
                                      },
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":kms:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":key/*"
                                          ]
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PasswordlessCreateAuthChallengePasswordlessServiceRoleDefaultPolicy92772054",
                                "roles": [
                                  {
                                    "Ref": "PasswordlessCreateAuthChallengePasswordlessServiceRoleF563E878"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.102.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "skgo/Passwordless/CreateAuthChallengePasswordless/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "skgo/Passwordless/CreateAuthChallengePasswordless/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.102.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "skgo/Passwordless/CreateAuthChallengePasswordless/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.102.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/Passwordless/CreateAuthChallengePasswordless/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "architectures": [
                          "arm64"
                        ],
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "b3928866308a0c642627e36a9c4f8e922321dd22b41aba541919a1b8eff85ea7.zip"
                        },
                        "environment": {
                          "variables": {
                            "ALLOWED_ORIGINS": {
                              "Fn::Join": [
                                "",
                                [
                                  "http://localhost:5173,https://",
                                  {
                                    "Fn::GetAtt": [
                                      "ExampleSpaDistribution74BEDF51",
                                      "DomainName"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "LOG_LEVEL": "DEBUG",
                            "MAGIC_LINK_ENABLED": "TRUE",
                            "SES_FROM_ADDRESS": "syed.kam.ahmed@gmail.com",
                            "SES_REGION": "",
                            "KMS_KEY_ID": {
                              "Ref": "PasswordlessKmsKeyRsaPasswordlessAliasB644EC4D"
                            },
                            "DYNAMODB_SECRETS_TABLE": {
                              "Ref": "SecretsTablePasswordless8B664A61"
                            },
                            "SECONDS_UNTIL_EXPIRY": "900",
                            "MIN_SECONDS_BETWEEN": "60",
                            "STACK_ID": {
                              "Ref": "AWS::StackId"
                            },
                            "FIDO2_ENABLED": "TRUE",
                            "DYNAMODB_AUTHENTICATORS_TABLE": {
                              "Ref": "Fido2AuthenticatorsTablePasswordlessBDEAEEE6"
                            },
                            "USER_VERIFICATION": "required",
                            "EXPOSE_USER_CREDENTIAL_IDS": "TRUE",
                            "SIGN_IN_TIMEOUT": "120000",
                            "SMS_OTP_STEP_UP_ENABLED": "TRUE",
                            "OTP_LENGTH": "",
                            "ORIGINATION_NUMBER": "",
                            "SENDER_ID": "",
                            "SNS_REGION": "",
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "role": {
                          "Fn::GetAtt": [
                            "PasswordlessCreateAuthChallengePasswordlessServiceRoleF563E878",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs18.x",
                        "timeout": 5
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
                  "version": "2.102.0"
                }
              },
              "VerifyAuthChallengeResponsePasswordless": {
                "id": "VerifyAuthChallengeResponsePasswordless",
                "path": "skgo/Passwordless/VerifyAuthChallengeResponsePasswordless",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "skgo/Passwordless/VerifyAuthChallengeResponsePasswordless/ServiceRole",
                    "children": {
                      "ImportServiceRole": {
                        "id": "ImportServiceRole",
                        "path": "skgo/Passwordless/VerifyAuthChallengeResponsePasswordless/ServiceRole/ImportServiceRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.102.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "skgo/Passwordless/VerifyAuthChallengeResponsePasswordless/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.102.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "skgo/Passwordless/VerifyAuthChallengeResponsePasswordless/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "skgo/Passwordless/VerifyAuthChallengeResponsePasswordless/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:ConditionCheckItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:GetItem",
                                        "dynamodb:GetRecords",
                                        "dynamodb:GetShardIterator",
                                        "dynamodb:PutItem",
                                        "dynamodb:Query",
                                        "dynamodb:Scan",
                                        "dynamodb:UpdateItem"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Fido2AuthenticatorsTablePasswordlessBDEAEEE6",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::GetAtt": [
                                            "SecretsTablePasswordless8B664A61",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Fido2AuthenticatorsTablePasswordlessBDEAEEE6",
                                                  "Arn"
                                                ]
                                              },
                                              "/index/*"
                                            ]
                                          ]
                                        },
                                        {
                                          "Ref": "AWS::NoValue"
                                        }
                                      ]
                                    },
                                    {
                                      "Action": "kms:GetPublicKey",
                                      "Condition": {
                                        "StringLike": {
                                          "kms:RequestAlias": {
                                            "Ref": "PasswordlessKmsKeyRsaPasswordlessAliasB644EC4D"
                                          }
                                        }
                                      },
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":kms:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":",
                                            {
                                              "Ref": "AWS::AccountId"
                                            },
                                            ":key/*"
                                          ]
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PasswordlessVerifyAuthChallengeResponsePasswordlessServiceRoleDefaultPolicy7E3C4546",
                                "roles": [
                                  {
                                    "Ref": "PasswordlessVerifyAuthChallengeResponsePasswordlessServiceRoleE593DE53"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.102.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "skgo/Passwordless/VerifyAuthChallengeResponsePasswordless/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "skgo/Passwordless/VerifyAuthChallengeResponsePasswordless/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.102.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "skgo/Passwordless/VerifyAuthChallengeResponsePasswordless/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.102.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/Passwordless/VerifyAuthChallengeResponsePasswordless/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "architectures": [
                          "arm64"
                        ],
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "ce8218fdc84065fd6c1087aff3e549c0e5188d97566ec523a0d137d5f01b61ad.zip"
                        },
                        "environment": {
                          "variables": {
                            "ALLOWED_ORIGINS": {
                              "Fn::Join": [
                                "",
                                [
                                  "http://localhost:5173,https://",
                                  {
                                    "Fn::GetAtt": [
                                      "ExampleSpaDistribution74BEDF51",
                                      "DomainName"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "LOG_LEVEL": "DEBUG",
                            "MAGIC_LINK_ENABLED": "TRUE",
                            "DYNAMODB_SECRETS_TABLE": {
                              "Ref": "SecretsTablePasswordless8B664A61"
                            },
                            "STACK_ID": {
                              "Ref": "AWS::StackId"
                            },
                            "FIDO2_ENABLED": "TRUE",
                            "DYNAMODB_AUTHENTICATORS_TABLE": {
                              "Ref": "Fido2AuthenticatorsTablePasswordlessBDEAEEE6"
                            },
                            "ALLOWED_RELYING_PARTY_IDS": {
                              "Fn::Join": [
                                "",
                                [
                                  "localhost,",
                                  {
                                    "Fn::GetAtt": [
                                      "ExampleSpaDistribution74BEDF51",
                                      "DomainName"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "ENFORCE_FIDO2_IF_AVAILABLE": "",
                            "USER_VERIFICATION": "required",
                            "SMS_OTP_STEP_UP_ENABLED": "TRUE",
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "role": {
                          "Fn::GetAtt": [
                            "PasswordlessVerifyAuthChallengeResponsePasswordlessServiceRoleE593DE53",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs18.x",
                        "timeout": 5
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
                  "version": "2.102.0"
                }
              },
              "DefineAuthChallengePasswordless": {
                "id": "DefineAuthChallengePasswordless",
                "path": "skgo/Passwordless/DefineAuthChallengePasswordless",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "skgo/Passwordless/DefineAuthChallengePasswordless/ServiceRole",
                    "children": {
                      "ImportServiceRole": {
                        "id": "ImportServiceRole",
                        "path": "skgo/Passwordless/DefineAuthChallengePasswordless/ServiceRole/ImportServiceRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.102.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "skgo/Passwordless/DefineAuthChallengePasswordless/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.102.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "skgo/Passwordless/DefineAuthChallengePasswordless/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "skgo/Passwordless/DefineAuthChallengePasswordless/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.102.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "skgo/Passwordless/DefineAuthChallengePasswordless/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.102.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/Passwordless/DefineAuthChallengePasswordless/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "architectures": [
                          "arm64"
                        ],
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "cef53f329d91fabb66e0554170e1b05cdd57861a42496dfe788b3faaf9ab2e22.zip"
                        },
                        "environment": {
                          "variables": {
                            "LOG_LEVEL": "DEBUG",
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "role": {
                          "Fn::GetAtt": [
                            "PasswordlessDefineAuthChallengePasswordlessServiceRole74C4D980",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs18.x",
                        "timeout": 5
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
                  "version": "2.102.0"
                }
              },
              "PreTokenPasswordless": {
                "id": "PreTokenPasswordless",
                "path": "skgo/Passwordless/PreTokenPasswordless",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "skgo/Passwordless/PreTokenPasswordless/ServiceRole",
                    "children": {
                      "ImportServiceRole": {
                        "id": "ImportServiceRole",
                        "path": "skgo/Passwordless/PreTokenPasswordless/ServiceRole/ImportServiceRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.102.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "skgo/Passwordless/PreTokenPasswordless/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.102.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "skgo/Passwordless/PreTokenPasswordless/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "skgo/Passwordless/PreTokenPasswordless/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.102.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "skgo/Passwordless/PreTokenPasswordless/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.102.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/Passwordless/PreTokenPasswordless/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "architectures": [
                          "arm64"
                        ],
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "a24f080551af1410ec49063d4f193be8d3b6bff8b69c862057532c51cb87317f.zip"
                        },
                        "environment": {
                          "variables": {
                            "LOG_LEVEL": "DEBUG",
                            "CLIENT_METADATA_PERSISTED_KEYS": "signInMethod,consent_id",
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "role": {
                          "Fn::GetAtt": [
                            "PasswordlessPreTokenPasswordlessServiceRoleAA5E04E8",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs18.x"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
                  "version": "2.102.0"
                }
              },
              "Fido2Passwordless": {
                "id": "Fido2Passwordless",
                "path": "skgo/Passwordless/Fido2Passwordless",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "skgo/Passwordless/Fido2Passwordless/ServiceRole",
                    "children": {
                      "ImportServiceRole": {
                        "id": "ImportServiceRole",
                        "path": "skgo/Passwordless/Fido2Passwordless/ServiceRole/ImportServiceRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.102.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "skgo/Passwordless/Fido2Passwordless/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.102.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "skgo/Passwordless/Fido2Passwordless/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "skgo/Passwordless/Fido2Passwordless/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "cognito-idp:AdminGetUser",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "UserPoolPasswordless1160377F",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:ConditionCheckItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:GetItem",
                                        "dynamodb:GetRecords",
                                        "dynamodb:GetShardIterator",
                                        "dynamodb:PutItem",
                                        "dynamodb:Query",
                                        "dynamodb:Scan",
                                        "dynamodb:UpdateItem"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        {
                                          "Fn::GetAtt": [
                                            "Fido2AuthenticatorsTablePasswordlessBDEAEEE6",
                                            "Arn"
                                          ]
                                        },
                                        {
                                          "Fn::Join": [
                                            "",
                                            [
                                              {
                                                "Fn::GetAtt": [
                                                  "Fido2AuthenticatorsTablePasswordlessBDEAEEE6",
                                                  "Arn"
                                                ]
                                              },
                                              "/index/*"
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PasswordlessFido2PasswordlessServiceRoleDefaultPolicyF00F9808",
                                "roles": [
                                  {
                                    "Ref": "PasswordlessFido2PasswordlessServiceRole2AD3C4A3"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.102.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "skgo/Passwordless/Fido2Passwordless/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "skgo/Passwordless/Fido2Passwordless/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.102.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "skgo/Passwordless/Fido2Passwordless/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.102.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/Passwordless/Fido2Passwordless/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "architectures": [
                          "arm64"
                        ],
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "847c24c7fde3cc7615a60b668a45ffaa3da3f9ef664d3c5de3c02e47e070b326.zip"
                        },
                        "environment": {
                          "variables": {
                            "LOG_LEVEL": "DEBUG",
                            "DYNAMODB_AUTHENTICATORS_TABLE": {
                              "Ref": "Fido2AuthenticatorsTablePasswordlessBDEAEEE6"
                            },
                            "COGNITO_USER_POOL_ID": {
                              "Ref": "UserPoolPasswordless1160377F"
                            },
                            "RELYING_PARTY_NAME": "Passwordless Fido2 Example",
                            "ALLOWED_RELYING_PARTY_IDS": {
                              "Fn::Join": [
                                "",
                                [
                                  "localhost,",
                                  {
                                    "Fn::GetAtt": [
                                      "ExampleSpaDistribution74BEDF51",
                                      "DomainName"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "ALLOWED_ORIGINS": {
                              "Fn::Join": [
                                "",
                                [
                                  "http://localhost:5173,https://",
                                  {
                                    "Fn::GetAtt": [
                                      "ExampleSpaDistribution74BEDF51",
                                      "DomainName"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "ATTESTATION": "none",
                            "USER_VERIFICATION": "required",
                            "AUTHENTICATOR_ATTACHMENT": "",
                            "REQUIRE_RESIDENT_KEY": "",
                            "AUTHENTICATOR_REGISTRATION_TIMEOUT": "300000",
                            "CORS_ALLOWED_ORIGINS": {
                              "Fn::Join": [
                                "",
                                [
                                  "http://localhost:5173,https://",
                                  {
                                    "Fn::GetAtt": [
                                      "ExampleSpaDistribution74BEDF51",
                                      "DomainName"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "CORS_ALLOWED_HEADERS": "Content-Type,Authorization",
                            "CORS_ALLOWED_METHODS": "POST",
                            "CORS_MAX_AGE": "86400",
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "role": {
                          "Fn::GetAtt": [
                            "PasswordlessFido2PasswordlessServiceRole2AD3C4A3",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs18.x",
                        "timeout": 30
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
                  "version": "2.102.0"
                }
              },
              "Fido2ChallengePasswordless": {
                "id": "Fido2ChallengePasswordless",
                "path": "skgo/Passwordless/Fido2ChallengePasswordless",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "skgo/Passwordless/Fido2ChallengePasswordless/ServiceRole",
                    "children": {
                      "ImportServiceRole": {
                        "id": "ImportServiceRole",
                        "path": "skgo/Passwordless/Fido2ChallengePasswordless/ServiceRole/ImportServiceRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.102.0"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "skgo/Passwordless/Fido2ChallengePasswordless/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.102.0"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "skgo/Passwordless/Fido2ChallengePasswordless/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "skgo/Passwordless/Fido2ChallengePasswordless/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "dynamodb:PutItem",
                                      "Condition": {
                                        "ForAllValues:StringEquals": {
                                          "dynamodb:Attributes": [
                                            "pk",
                                            "sk",
                                            "exp"
                                          ]
                                        }
                                      },
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "Fido2AuthenticatorsTablePasswordlessBDEAEEE6",
                                          "Arn"
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "PasswordlessFido2ChallengePasswordlessServiceRoleDefaultPolicyF79C351B",
                                "roles": [
                                  {
                                    "Ref": "PasswordlessFido2ChallengePasswordlessServiceRole275A8AA8"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.102.0"
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "skgo/Passwordless/Fido2ChallengePasswordless/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "skgo/Passwordless/Fido2ChallengePasswordless/Code/Stage",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.AssetStaging",
                          "version": "2.102.0"
                        }
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "skgo/Passwordless/Fido2ChallengePasswordless/Code/AssetBucket",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                      "version": "2.102.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/Passwordless/Fido2ChallengePasswordless/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "architectures": [
                          "arm64"
                        ],
                        "code": {
                          "s3Bucket": {
                            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
                          },
                          "s3Key": "fea75e9f922fbee7f916805765ecbc86ef26fabc19683819f4c8326098412384.zip"
                        },
                        "environment": {
                          "variables": {
                            "LOG_LEVEL": "DEBUG",
                            "DYNAMODB_AUTHENTICATORS_TABLE": {
                              "Ref": "Fido2AuthenticatorsTablePasswordlessBDEAEEE6"
                            },
                            "SIGN_IN_TIMEOUT": "120000",
                            "USER_VERIFICATION": "required",
                            "CORS_ALLOWED_ORIGINS": {
                              "Fn::Join": [
                                "",
                                [
                                  "http://localhost:5173,https://",
                                  {
                                    "Fn::GetAtt": [
                                      "ExampleSpaDistribution74BEDF51",
                                      "DomainName"
                                    ]
                                  }
                                ]
                              ]
                            },
                            "CORS_ALLOWED_HEADERS": "Content-Type",
                            "CORS_ALLOWED_METHODS": "POST",
                            "CORS_MAX_AGE": "86400",
                            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                          }
                        },
                        "handler": "index.handler",
                        "role": {
                          "Fn::GetAtt": [
                            "PasswordlessFido2ChallengePasswordlessServiceRole275A8AA8",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs18.x",
                        "timeout": 30
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
                  "version": "2.102.0"
                }
              },
              "ApigwAccessLogsPasswordless": {
                "id": "ApigwAccessLogsPasswordless",
                "path": "skgo/Passwordless/ApigwAccessLogsPasswordless",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/Passwordless/ApigwAccessLogsPasswordless/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                      "aws:cdk:cloudformation:props": {}
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_logs.CfnLogGroup",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogGroup",
                  "version": "2.102.0"
                }
              },
              "RestApiPasswordless": {
                "id": "RestApiPasswordless",
                "path": "skgo/Passwordless/RestApiPasswordless",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/Passwordless/RestApiPasswordless/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                      "aws:cdk:cloudformation:props": {
                        "name": "RestApiPasswordless"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                      "version": "2.102.0"
                    }
                  },
                  "Deployment": {
                    "id": "Deployment",
                    "path": "skgo/Passwordless/RestApiPasswordless/Deployment",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "skgo/Passwordless/RestApiPasswordless/Deployment/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                          "aws:cdk:cloudformation:props": {
                            "description": "Automatically created by the RestApi construct",
                            "restApiId": {
                              "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                      "version": "2.102.0"
                    }
                  },
                  "DeploymentStage.v1": {
                    "id": "DeploymentStage.v1",
                    "path": "skgo/Passwordless/RestApiPasswordless/DeploymentStage.v1",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "skgo/Passwordless/RestApiPasswordless/DeploymentStage.v1/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                          "aws:cdk:cloudformation:props": {
                            "accessLogSetting": {
                              "destinationArn": {
                                "Fn::GetAtt": [
                                  "PasswordlessApigwAccessLogsPasswordless386F21A3",
                                  "Arn"
                                ]
                              },
                              "format": "{\"requestId\":\"$context.requestId\",\"jwtSub\":\"$context.authorizer.claims.sub\",\"jwtIat\":\"$context.authorizer.claims.iat\",\"jwtEventId\":\"$context.authorizer.claims.event_id\",\"jwtJti\":\"$context.authorizer.claims.jti\",\"jwtOriginJti\":\"$context.authorizer.claims.origin_jti\",\"jwtSignInMethod\":\"$context.authorizer.claims.sign_in_method\",\"userAgent\":\"$context.identity.userAgent\",\"sourceIp\":\"$context.identity.sourceIp\",\"requestTime\":\"$context.requestTime\",\"requestTimeEpoch\":\"$context.requestTimeEpoch\",\"httpMethod\":\"$context.httpMethod\",\"path\":\"$context.path\",\"status\":\"$context.status\",\"authorizerError\":\"$context.authorizer.error\",\"apiError\":\"$context.error.message\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\",\"responseLatency\":\"$context.responseLatency\",\"domainName\":\"$context.domainName\"}"
                            },
                            "deploymentId": {
                              "Ref": "PasswordlessRestApiPasswordlessDeploymentA9C3B69Abfb4d0d0545c85751b4d10381a6c1cf7"
                            },
                            "methodSettings": [
                              {
                                "httpMethod": "*",
                                "resourcePath": "/*",
                                "dataTraceEnabled": false,
                                "loggingLevel": "ERROR",
                                "metricsEnabled": true,
                                "throttlingBurstLimit": 1000,
                                "throttlingRateLimit": 2000
                              }
                            ],
                            "restApiId": {
                              "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                            },
                            "stageName": "v1"
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                      "version": "2.102.0"
                    }
                  },
                  "Endpoint": {
                    "id": "Endpoint",
                    "path": "skgo/Passwordless/RestApiPasswordless/Endpoint",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnOutput",
                      "version": "2.102.0"
                    }
                  },
                  "Default": {
                    "id": "Default",
                    "path": "skgo/Passwordless/RestApiPasswordless/Default",
                    "children": {
                      "register-authenticator": {
                        "id": "register-authenticator",
                        "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Fn::GetAtt": [
                                    "PasswordlessRestApiPasswordless3F299C9C",
                                    "RootResourceId"
                                  ]
                                },
                                "pathPart": "register-authenticator",
                                "restApiId": {
                                  "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.102.0"
                            }
                          },
                          "start": {
                            "id": "start",
                            "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/start",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/start/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                                  "aws:cdk:cloudformation:props": {
                                    "parentId": {
                                      "Ref": "PasswordlessRestApiPasswordlessregisterauthenticator682B6387"
                                    },
                                    "pathPart": "start",
                                    "restApiId": {
                                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                                  "version": "2.102.0"
                                }
                              },
                              "OPTIONS": {
                                "id": "OPTIONS",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/start/OPTIONS",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/start/OPTIONS/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                      "aws:cdk:cloudformation:props": {
                                        "apiKeyRequired": false,
                                        "authorizationType": "NONE",
                                        "httpMethod": "OPTIONS",
                                        "integration": {
                                          "type": "MOCK",
                                          "requestTemplates": {
                                            "application/json": "{ statusCode: 200 }"
                                          },
                                          "integrationResponses": [
                                            {
                                              "statusCode": "204",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                                                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                                                "method.response.header.Vary": "'Origin'",
                                                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                                "method.response.header.Access-Control-Max-Age": "'86400'"
                                              },
                                              "responseTemplates": {
                                                "application/json": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://",
                                                      {
                                                        "Fn::GetAtt": [
                                                          "ExampleSpaDistribution74BEDF51",
                                                          "DomainName"
                                                        ]
                                                      },
                                                      "\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "methodResponses": [
                                          {
                                            "statusCode": "204",
                                            "responseParameters": {
                                              "method.response.header.Access-Control-Allow-Headers": true,
                                              "method.response.header.Access-Control-Allow-Origin": true,
                                              "method.response.header.Vary": true,
                                              "method.response.header.Access-Control-Allow-Methods": true,
                                              "method.response.header.Access-Control-Max-Age": true
                                            }
                                          }
                                        ],
                                        "resourceId": {
                                          "Ref": "PasswordlessRestApiPasswordlessregisterauthenticatorstart042301B5"
                                        },
                                        "restApiId": {
                                          "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                      "version": "2.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.Method",
                                  "version": "2.102.0"
                                }
                              },
                              "POST": {
                                "id": "POST",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/start/POST",
                                "children": {
                                  "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.start": {
                                    "id": "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.start",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/start/POST/ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.start",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                      "aws:cdk:cloudformation:props": {
                                        "action": "lambda:InvokeFunction",
                                        "functionName": {
                                          "Fn::GetAtt": [
                                            "PasswordlessFido2PasswordlessA1DBE762",
                                            "Arn"
                                          ]
                                        },
                                        "principal": "apigateway.amazonaws.com",
                                        "sourceArn": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":execute-api:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                              },
                                              "/",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordlessDeploymentStagev1C37D843A"
                                              },
                                              "/POST/register-authenticator/start"
                                            ]
                                          ]
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                      "version": "2.102.0"
                                    }
                                  },
                                  "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.start": {
                                    "id": "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.start",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/start/POST/ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.start",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                      "aws:cdk:cloudformation:props": {
                                        "action": "lambda:InvokeFunction",
                                        "functionName": {
                                          "Fn::GetAtt": [
                                            "PasswordlessFido2PasswordlessA1DBE762",
                                            "Arn"
                                          ]
                                        },
                                        "principal": "apigateway.amazonaws.com",
                                        "sourceArn": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":execute-api:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                              },
                                              "/test-invoke-stage/POST/register-authenticator/start"
                                            ]
                                          ]
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                      "version": "2.102.0"
                                    }
                                  },
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/start/POST/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                      "aws:cdk:cloudformation:props": {
                                        "authorizationType": "COGNITO_USER_POOLS",
                                        "authorizerId": {
                                          "Ref": "CognitoAuthorizerPasswordlessE0617EE7"
                                        },
                                        "httpMethod": "POST",
                                        "integration": {
                                          "type": "AWS_PROXY",
                                          "uri": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":apigateway:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":lambda:path/2015-03-31/functions/",
                                                {
                                                  "Fn::GetAtt": [
                                                    "PasswordlessFido2PasswordlessA1DBE762",
                                                    "Arn"
                                                  ]
                                                },
                                                "/invocations"
                                              ]
                                            ]
                                          },
                                          "integrationHttpMethod": "POST"
                                        },
                                        "requestParameters": {
                                          "method.request.querystring.rpId": true
                                        },
                                        "requestValidatorId": {
                                          "Ref": "ReqValidator1EEDC831"
                                        },
                                        "resourceId": {
                                          "Ref": "PasswordlessRestApiPasswordlessregisterauthenticatorstart042301B5"
                                        },
                                        "restApiId": {
                                          "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                      "version": "2.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.Method",
                                  "version": "2.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                              "version": "2.102.0"
                            }
                          },
                          "complete": {
                            "id": "complete",
                            "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/complete",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/complete/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                                  "aws:cdk:cloudformation:props": {
                                    "parentId": {
                                      "Ref": "PasswordlessRestApiPasswordlessregisterauthenticator682B6387"
                                    },
                                    "pathPart": "complete",
                                    "restApiId": {
                                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                                  "version": "2.102.0"
                                }
                              },
                              "OPTIONS": {
                                "id": "OPTIONS",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/complete/OPTIONS",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/complete/OPTIONS/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                      "aws:cdk:cloudformation:props": {
                                        "apiKeyRequired": false,
                                        "authorizationType": "NONE",
                                        "httpMethod": "OPTIONS",
                                        "integration": {
                                          "type": "MOCK",
                                          "requestTemplates": {
                                            "application/json": "{ statusCode: 200 }"
                                          },
                                          "integrationResponses": [
                                            {
                                              "statusCode": "204",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                                                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                                                "method.response.header.Vary": "'Origin'",
                                                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                                "method.response.header.Access-Control-Max-Age": "'86400'"
                                              },
                                              "responseTemplates": {
                                                "application/json": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://",
                                                      {
                                                        "Fn::GetAtt": [
                                                          "ExampleSpaDistribution74BEDF51",
                                                          "DomainName"
                                                        ]
                                                      },
                                                      "\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "methodResponses": [
                                          {
                                            "statusCode": "204",
                                            "responseParameters": {
                                              "method.response.header.Access-Control-Allow-Headers": true,
                                              "method.response.header.Access-Control-Allow-Origin": true,
                                              "method.response.header.Vary": true,
                                              "method.response.header.Access-Control-Allow-Methods": true,
                                              "method.response.header.Access-Control-Max-Age": true
                                            }
                                          }
                                        ],
                                        "resourceId": {
                                          "Ref": "PasswordlessRestApiPasswordlessregisterauthenticatorcompleteC2D11CC6"
                                        },
                                        "restApiId": {
                                          "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                      "version": "2.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.Method",
                                  "version": "2.102.0"
                                }
                              },
                              "POST": {
                                "id": "POST",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/complete/POST",
                                "children": {
                                  "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.complete": {
                                    "id": "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.complete",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/complete/POST/ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.complete",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                      "aws:cdk:cloudformation:props": {
                                        "action": "lambda:InvokeFunction",
                                        "functionName": {
                                          "Fn::GetAtt": [
                                            "PasswordlessFido2PasswordlessA1DBE762",
                                            "Arn"
                                          ]
                                        },
                                        "principal": "apigateway.amazonaws.com",
                                        "sourceArn": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":execute-api:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                              },
                                              "/",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordlessDeploymentStagev1C37D843A"
                                              },
                                              "/POST/register-authenticator/complete"
                                            ]
                                          ]
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                      "version": "2.102.0"
                                    }
                                  },
                                  "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.complete": {
                                    "id": "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.complete",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/complete/POST/ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..register-authenticator.complete",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                      "aws:cdk:cloudformation:props": {
                                        "action": "lambda:InvokeFunction",
                                        "functionName": {
                                          "Fn::GetAtt": [
                                            "PasswordlessFido2PasswordlessA1DBE762",
                                            "Arn"
                                          ]
                                        },
                                        "principal": "apigateway.amazonaws.com",
                                        "sourceArn": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":execute-api:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                              },
                                              "/test-invoke-stage/POST/register-authenticator/complete"
                                            ]
                                          ]
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                      "version": "2.102.0"
                                    }
                                  },
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/register-authenticator/complete/POST/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                      "aws:cdk:cloudformation:props": {
                                        "authorizationType": "COGNITO_USER_POOLS",
                                        "authorizerId": {
                                          "Ref": "CognitoAuthorizerPasswordlessE0617EE7"
                                        },
                                        "httpMethod": "POST",
                                        "integration": {
                                          "type": "AWS_PROXY",
                                          "uri": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":apigateway:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":lambda:path/2015-03-31/functions/",
                                                {
                                                  "Fn::GetAtt": [
                                                    "PasswordlessFido2PasswordlessA1DBE762",
                                                    "Arn"
                                                  ]
                                                },
                                                "/invocations"
                                              ]
                                            ]
                                          },
                                          "integrationHttpMethod": "POST"
                                        },
                                        "requestModels": {
                                          "application/json": {
                                            "Ref": "CompleteRegistrationModelPasswordlessBE02D60F"
                                          }
                                        },
                                        "requestValidatorId": {
                                          "Ref": "ReqValidator1EEDC831"
                                        },
                                        "resourceId": {
                                          "Ref": "PasswordlessRestApiPasswordlessregisterauthenticatorcompleteC2D11CC6"
                                        },
                                        "restApiId": {
                                          "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                      "version": "2.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.Method",
                                  "version": "2.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                              "version": "2.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.102.0"
                        }
                      },
                      "authenticators": {
                        "id": "authenticators",
                        "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Fn::GetAtt": [
                                    "PasswordlessRestApiPasswordless3F299C9C",
                                    "RootResourceId"
                                  ]
                                },
                                "pathPart": "authenticators",
                                "restApiId": {
                                  "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.102.0"
                            }
                          },
                          "list": {
                            "id": "list",
                            "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/list",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/list/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                                  "aws:cdk:cloudformation:props": {
                                    "parentId": {
                                      "Ref": "PasswordlessRestApiPasswordlessauthenticatorsBF57B519"
                                    },
                                    "pathPart": "list",
                                    "restApiId": {
                                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                                  "version": "2.102.0"
                                }
                              },
                              "OPTIONS": {
                                "id": "OPTIONS",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/list/OPTIONS",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/list/OPTIONS/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                      "aws:cdk:cloudformation:props": {
                                        "apiKeyRequired": false,
                                        "authorizationType": "NONE",
                                        "httpMethod": "OPTIONS",
                                        "integration": {
                                          "type": "MOCK",
                                          "requestTemplates": {
                                            "application/json": "{ statusCode: 200 }"
                                          },
                                          "integrationResponses": [
                                            {
                                              "statusCode": "204",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                                                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                                                "method.response.header.Vary": "'Origin'",
                                                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                                "method.response.header.Access-Control-Max-Age": "'86400'"
                                              },
                                              "responseTemplates": {
                                                "application/json": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://",
                                                      {
                                                        "Fn::GetAtt": [
                                                          "ExampleSpaDistribution74BEDF51",
                                                          "DomainName"
                                                        ]
                                                      },
                                                      "\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "methodResponses": [
                                          {
                                            "statusCode": "204",
                                            "responseParameters": {
                                              "method.response.header.Access-Control-Allow-Headers": true,
                                              "method.response.header.Access-Control-Allow-Origin": true,
                                              "method.response.header.Vary": true,
                                              "method.response.header.Access-Control-Allow-Methods": true,
                                              "method.response.header.Access-Control-Max-Age": true
                                            }
                                          }
                                        ],
                                        "resourceId": {
                                          "Ref": "PasswordlessRestApiPasswordlessauthenticatorslistA442C7CC"
                                        },
                                        "restApiId": {
                                          "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                      "version": "2.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.Method",
                                  "version": "2.102.0"
                                }
                              },
                              "POST": {
                                "id": "POST",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/list/POST",
                                "children": {
                                  "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.list": {
                                    "id": "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.list",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/list/POST/ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.list",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                      "aws:cdk:cloudformation:props": {
                                        "action": "lambda:InvokeFunction",
                                        "functionName": {
                                          "Fn::GetAtt": [
                                            "PasswordlessFido2PasswordlessA1DBE762",
                                            "Arn"
                                          ]
                                        },
                                        "principal": "apigateway.amazonaws.com",
                                        "sourceArn": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":execute-api:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                              },
                                              "/",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordlessDeploymentStagev1C37D843A"
                                              },
                                              "/POST/authenticators/list"
                                            ]
                                          ]
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                      "version": "2.102.0"
                                    }
                                  },
                                  "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.list": {
                                    "id": "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.list",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/list/POST/ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.list",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                      "aws:cdk:cloudformation:props": {
                                        "action": "lambda:InvokeFunction",
                                        "functionName": {
                                          "Fn::GetAtt": [
                                            "PasswordlessFido2PasswordlessA1DBE762",
                                            "Arn"
                                          ]
                                        },
                                        "principal": "apigateway.amazonaws.com",
                                        "sourceArn": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":execute-api:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                              },
                                              "/test-invoke-stage/POST/authenticators/list"
                                            ]
                                          ]
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                      "version": "2.102.0"
                                    }
                                  },
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/list/POST/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                      "aws:cdk:cloudformation:props": {
                                        "authorizationType": "COGNITO_USER_POOLS",
                                        "authorizerId": {
                                          "Ref": "CognitoAuthorizerPasswordlessE0617EE7"
                                        },
                                        "httpMethod": "POST",
                                        "integration": {
                                          "type": "AWS_PROXY",
                                          "uri": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":apigateway:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":lambda:path/2015-03-31/functions/",
                                                {
                                                  "Fn::GetAtt": [
                                                    "PasswordlessFido2PasswordlessA1DBE762",
                                                    "Arn"
                                                  ]
                                                },
                                                "/invocations"
                                              ]
                                            ]
                                          },
                                          "integrationHttpMethod": "POST"
                                        },
                                        "requestParameters": {
                                          "method.request.querystring.rpId": true
                                        },
                                        "requestValidatorId": {
                                          "Ref": "ReqValidator1EEDC831"
                                        },
                                        "resourceId": {
                                          "Ref": "PasswordlessRestApiPasswordlessauthenticatorslistA442C7CC"
                                        },
                                        "restApiId": {
                                          "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                      "version": "2.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.Method",
                                  "version": "2.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                              "version": "2.102.0"
                            }
                          },
                          "delete": {
                            "id": "delete",
                            "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/delete",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/delete/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                                  "aws:cdk:cloudformation:props": {
                                    "parentId": {
                                      "Ref": "PasswordlessRestApiPasswordlessauthenticatorsBF57B519"
                                    },
                                    "pathPart": "delete",
                                    "restApiId": {
                                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                                  "version": "2.102.0"
                                }
                              },
                              "OPTIONS": {
                                "id": "OPTIONS",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/delete/OPTIONS",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/delete/OPTIONS/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                      "aws:cdk:cloudformation:props": {
                                        "apiKeyRequired": false,
                                        "authorizationType": "NONE",
                                        "httpMethod": "OPTIONS",
                                        "integration": {
                                          "type": "MOCK",
                                          "requestTemplates": {
                                            "application/json": "{ statusCode: 200 }"
                                          },
                                          "integrationResponses": [
                                            {
                                              "statusCode": "204",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                                                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                                                "method.response.header.Vary": "'Origin'",
                                                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                                "method.response.header.Access-Control-Max-Age": "'86400'"
                                              },
                                              "responseTemplates": {
                                                "application/json": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://",
                                                      {
                                                        "Fn::GetAtt": [
                                                          "ExampleSpaDistribution74BEDF51",
                                                          "DomainName"
                                                        ]
                                                      },
                                                      "\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "methodResponses": [
                                          {
                                            "statusCode": "204",
                                            "responseParameters": {
                                              "method.response.header.Access-Control-Allow-Headers": true,
                                              "method.response.header.Access-Control-Allow-Origin": true,
                                              "method.response.header.Vary": true,
                                              "method.response.header.Access-Control-Allow-Methods": true,
                                              "method.response.header.Access-Control-Max-Age": true
                                            }
                                          }
                                        ],
                                        "resourceId": {
                                          "Ref": "PasswordlessRestApiPasswordlessauthenticatorsdelete9D6ED765"
                                        },
                                        "restApiId": {
                                          "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                      "version": "2.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.Method",
                                  "version": "2.102.0"
                                }
                              },
                              "POST": {
                                "id": "POST",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/delete/POST",
                                "children": {
                                  "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.delete": {
                                    "id": "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.delete",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/delete/POST/ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.delete",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                      "aws:cdk:cloudformation:props": {
                                        "action": "lambda:InvokeFunction",
                                        "functionName": {
                                          "Fn::GetAtt": [
                                            "PasswordlessFido2PasswordlessA1DBE762",
                                            "Arn"
                                          ]
                                        },
                                        "principal": "apigateway.amazonaws.com",
                                        "sourceArn": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":execute-api:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                              },
                                              "/",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordlessDeploymentStagev1C37D843A"
                                              },
                                              "/POST/authenticators/delete"
                                            ]
                                          ]
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                      "version": "2.102.0"
                                    }
                                  },
                                  "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.delete": {
                                    "id": "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.delete",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/delete/POST/ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.delete",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                      "aws:cdk:cloudformation:props": {
                                        "action": "lambda:InvokeFunction",
                                        "functionName": {
                                          "Fn::GetAtt": [
                                            "PasswordlessFido2PasswordlessA1DBE762",
                                            "Arn"
                                          ]
                                        },
                                        "principal": "apigateway.amazonaws.com",
                                        "sourceArn": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":execute-api:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                              },
                                              "/test-invoke-stage/POST/authenticators/delete"
                                            ]
                                          ]
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                      "version": "2.102.0"
                                    }
                                  },
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/delete/POST/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                      "aws:cdk:cloudformation:props": {
                                        "authorizationType": "COGNITO_USER_POOLS",
                                        "authorizerId": {
                                          "Ref": "CognitoAuthorizerPasswordlessE0617EE7"
                                        },
                                        "httpMethod": "POST",
                                        "integration": {
                                          "type": "AWS_PROXY",
                                          "uri": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":apigateway:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":lambda:path/2015-03-31/functions/",
                                                {
                                                  "Fn::GetAtt": [
                                                    "PasswordlessFido2PasswordlessA1DBE762",
                                                    "Arn"
                                                  ]
                                                },
                                                "/invocations"
                                              ]
                                            ]
                                          },
                                          "integrationHttpMethod": "POST"
                                        },
                                        "requestModels": {
                                          "application/json": {
                                            "Ref": "DeleteCredentialModelPasswordless3DF5E1E9"
                                          }
                                        },
                                        "requestValidatorId": {
                                          "Ref": "ReqValidator1EEDC831"
                                        },
                                        "resourceId": {
                                          "Ref": "PasswordlessRestApiPasswordlessauthenticatorsdelete9D6ED765"
                                        },
                                        "restApiId": {
                                          "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                      "version": "2.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.Method",
                                  "version": "2.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                              "version": "2.102.0"
                            }
                          },
                          "update": {
                            "id": "update",
                            "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/update",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/update/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                                  "aws:cdk:cloudformation:props": {
                                    "parentId": {
                                      "Ref": "PasswordlessRestApiPasswordlessauthenticatorsBF57B519"
                                    },
                                    "pathPart": "update",
                                    "restApiId": {
                                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                                  "version": "2.102.0"
                                }
                              },
                              "OPTIONS": {
                                "id": "OPTIONS",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/update/OPTIONS",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/update/OPTIONS/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                      "aws:cdk:cloudformation:props": {
                                        "apiKeyRequired": false,
                                        "authorizationType": "NONE",
                                        "httpMethod": "OPTIONS",
                                        "integration": {
                                          "type": "MOCK",
                                          "requestTemplates": {
                                            "application/json": "{ statusCode: 200 }"
                                          },
                                          "integrationResponses": [
                                            {
                                              "statusCode": "204",
                                              "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
                                                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                                                "method.response.header.Vary": "'Origin'",
                                                "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                                "method.response.header.Access-Control-Max-Age": "'86400'"
                                              },
                                              "responseTemplates": {
                                                "application/json": {
                                                  "Fn::Join": [
                                                    "",
                                                    [
                                                      "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://",
                                                      {
                                                        "Fn::GetAtt": [
                                                          "ExampleSpaDistribution74BEDF51",
                                                          "DomainName"
                                                        ]
                                                      },
                                                      "\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                                    ]
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "methodResponses": [
                                          {
                                            "statusCode": "204",
                                            "responseParameters": {
                                              "method.response.header.Access-Control-Allow-Headers": true,
                                              "method.response.header.Access-Control-Allow-Origin": true,
                                              "method.response.header.Vary": true,
                                              "method.response.header.Access-Control-Allow-Methods": true,
                                              "method.response.header.Access-Control-Max-Age": true
                                            }
                                          }
                                        ],
                                        "resourceId": {
                                          "Ref": "PasswordlessRestApiPasswordlessauthenticatorsupdate091E5688"
                                        },
                                        "restApiId": {
                                          "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                      "version": "2.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.Method",
                                  "version": "2.102.0"
                                }
                              },
                              "POST": {
                                "id": "POST",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/update/POST",
                                "children": {
                                  "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.update": {
                                    "id": "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.update",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/update/POST/ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.update",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                      "aws:cdk:cloudformation:props": {
                                        "action": "lambda:InvokeFunction",
                                        "functionName": {
                                          "Fn::GetAtt": [
                                            "PasswordlessFido2PasswordlessA1DBE762",
                                            "Arn"
                                          ]
                                        },
                                        "principal": "apigateway.amazonaws.com",
                                        "sourceArn": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":execute-api:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                              },
                                              "/",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordlessDeploymentStagev1C37D843A"
                                              },
                                              "/POST/authenticators/update"
                                            ]
                                          ]
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                      "version": "2.102.0"
                                    }
                                  },
                                  "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.update": {
                                    "id": "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.update",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/update/POST/ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..authenticators.update",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                      "aws:cdk:cloudformation:props": {
                                        "action": "lambda:InvokeFunction",
                                        "functionName": {
                                          "Fn::GetAtt": [
                                            "PasswordlessFido2PasswordlessA1DBE762",
                                            "Arn"
                                          ]
                                        },
                                        "principal": "apigateway.amazonaws.com",
                                        "sourceArn": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":execute-api:",
                                              {
                                                "Ref": "AWS::Region"
                                              },
                                              ":",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":",
                                              {
                                                "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                              },
                                              "/test-invoke-stage/POST/authenticators/update"
                                            ]
                                          ]
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                      "version": "2.102.0"
                                    }
                                  },
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "skgo/Passwordless/RestApiPasswordless/Default/authenticators/update/POST/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                      "aws:cdk:cloudformation:props": {
                                        "authorizationType": "COGNITO_USER_POOLS",
                                        "authorizerId": {
                                          "Ref": "CognitoAuthorizerPasswordlessE0617EE7"
                                        },
                                        "httpMethod": "POST",
                                        "integration": {
                                          "type": "AWS_PROXY",
                                          "uri": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":apigateway:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":lambda:path/2015-03-31/functions/",
                                                {
                                                  "Fn::GetAtt": [
                                                    "PasswordlessFido2PasswordlessA1DBE762",
                                                    "Arn"
                                                  ]
                                                },
                                                "/invocations"
                                              ]
                                            ]
                                          },
                                          "integrationHttpMethod": "POST"
                                        },
                                        "requestModels": {
                                          "application/json": {
                                            "Ref": "UpdateCredentialModelPasswordless4AC08D92"
                                          }
                                        },
                                        "requestValidatorId": {
                                          "Ref": "ReqValidator1EEDC831"
                                        },
                                        "resourceId": {
                                          "Ref": "PasswordlessRestApiPasswordlessauthenticatorsupdate091E5688"
                                        },
                                        "restApiId": {
                                          "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                        }
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                      "version": "2.102.0"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.Method",
                                  "version": "2.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                              "version": "2.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.102.0"
                        }
                      },
                      "sign-in-challenge": {
                        "id": "sign-in-challenge",
                        "path": "skgo/Passwordless/RestApiPasswordless/Default/sign-in-challenge",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "skgo/Passwordless/RestApiPasswordless/Default/sign-in-challenge/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Fn::GetAtt": [
                                    "PasswordlessRestApiPasswordless3F299C9C",
                                    "RootResourceId"
                                  ]
                                },
                                "pathPart": "sign-in-challenge",
                                "restApiId": {
                                  "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.102.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "skgo/Passwordless/RestApiPasswordless/Default/sign-in-challenge/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/sign-in-challenge/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "httpMethod": "OPTIONS",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                            "method.response.header.Access-Control-Max-Age": "'86400'"
                                          },
                                          "responseTemplates": {
                                            "application/json": {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\")\n  #set($origin = $input.params().header.get(\"origin\"))\n#end\n#if($origin == \"https://",
                                                  {
                                                    "Fn::GetAtt": [
                                                      "ExampleSpaDistribution74BEDF51",
                                                      "DomainName"
                                                    ]
                                                  },
                                                  "\")\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                                ]
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Max-Age": true
                                        }
                                      }
                                    ],
                                    "resourceId": {
                                      "Ref": "PasswordlessRestApiPasswordlesssigninchallengeCD03AB20"
                                    },
                                    "restApiId": {
                                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.102.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "skgo/Passwordless/RestApiPasswordless/Default/sign-in-challenge/POST",
                            "children": {
                              "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..sign-in-challenge": {
                                "id": "ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..sign-in-challenge",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/sign-in-challenge/POST/ApiPermission.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..sign-in-challenge",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "PasswordlessFido2ChallengePasswordlessA5A0FD2C",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                          },
                                          "/",
                                          {
                                            "Ref": "PasswordlessRestApiPasswordlessDeploymentStagev1C37D843A"
                                          },
                                          "/POST/sign-in-challenge"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.102.0"
                                }
                              },
                              "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..sign-in-challenge": {
                                "id": "ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..sign-in-challenge",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/sign-in-challenge/POST/ApiPermission.Test.skgoPasswordlessRestApiPasswordlessDBDEC1ED.POST..sign-in-challenge",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "PasswordlessFido2ChallengePasswordlessA5A0FD2C",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":",
                                          {
                                            "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                          },
                                          "/test-invoke-stage/POST/sign-in-challenge"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.102.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "skgo/Passwordless/RestApiPasswordless/Default/sign-in-challenge/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "authorizationType": "NONE",
                                    "httpMethod": "POST",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:",
                                            {
                                              "Ref": "AWS::Region"
                                            },
                                            ":lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "PasswordlessFido2ChallengePasswordlessA5A0FD2C",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    },
                                    "resourceId": {
                                      "Ref": "PasswordlessRestApiPasswordlesssigninchallengeCD03AB20"
                                    },
                                    "restApiId": {
                                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.102.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.102.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.102.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.LambdaRestApi",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.3.0"
            }
          },
          "SecretsTablePasswordless": {
            "id": "SecretsTablePasswordless",
            "path": "skgo/SecretsTablePasswordless",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "skgo/SecretsTablePasswordless/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::DynamoDB::Table",
                  "aws:cdk:cloudformation:props": {
                    "attributeDefinitions": [
                      {
                        "attributeName": "userNameHash",
                        "attributeType": "B"
                      }
                    ],
                    "billingMode": "PAY_PER_REQUEST",
                    "keySchema": [
                      {
                        "attributeName": "userNameHash",
                        "keyType": "HASH"
                      }
                    ],
                    "timeToLiveSpecification": {
                      "attributeName": "exp",
                      "enabled": true
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_dynamodb.CfnTable",
                  "version": "2.102.0"
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "skgo/SecretsTablePasswordless/ScalingRole",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_dynamodb.Table",
              "version": "2.102.0"
            }
          },
          "Fido2AuthenticatorsTablePasswordless": {
            "id": "Fido2AuthenticatorsTablePasswordless",
            "path": "skgo/Fido2AuthenticatorsTablePasswordless",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "skgo/Fido2AuthenticatorsTablePasswordless/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::DynamoDB::Table",
                  "aws:cdk:cloudformation:props": {
                    "attributeDefinitions": [
                      {
                        "attributeName": "pk",
                        "attributeType": "S"
                      },
                      {
                        "attributeName": "sk",
                        "attributeType": "S"
                      },
                      {
                        "attributeName": "credentialId",
                        "attributeType": "B"
                      }
                    ],
                    "billingMode": "PAY_PER_REQUEST",
                    "globalSecondaryIndexes": [
                      {
                        "indexName": "credentialId",
                        "keySchema": [
                          {
                            "attributeName": "credentialId",
                            "keyType": "HASH"
                          }
                        ],
                        "projection": {
                          "projectionType": "KEYS_ONLY"
                        }
                      }
                    ],
                    "keySchema": [
                      {
                        "attributeName": "pk",
                        "keyType": "HASH"
                      },
                      {
                        "attributeName": "sk",
                        "keyType": "RANGE"
                      }
                    ],
                    "pointInTimeRecoverySpecification": {
                      "pointInTimeRecoveryEnabled": true
                    },
                    "timeToLiveSpecification": {
                      "attributeName": "exp",
                      "enabled": true
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_dynamodb.CfnTable",
                  "version": "2.102.0"
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "skgo/Fido2AuthenticatorsTablePasswordless/ScalingRole",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_dynamodb.Table",
              "version": "2.102.0"
            }
          },
          "UserPoolPasswordless": {
            "id": "UserPoolPasswordless",
            "path": "skgo/UserPoolPasswordless",
            "children": {
              "DefineAuthChallengeCognito": {
                "id": "DefineAuthChallengeCognito",
                "path": "skgo/UserPoolPasswordless/DefineAuthChallengeCognito",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "PasswordlessDefineAuthChallengePasswordlessEC6A3147",
                        "Arn"
                      ]
                    },
                    "principal": "cognito-idp.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "UserPoolPasswordless1160377F",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.102.0"
                }
              },
              "CreateAuthChallengeCognito": {
                "id": "CreateAuthChallengeCognito",
                "path": "skgo/UserPoolPasswordless/CreateAuthChallengeCognito",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "PasswordlessCreateAuthChallengePasswordless51381B62",
                        "Arn"
                      ]
                    },
                    "principal": "cognito-idp.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "UserPoolPasswordless1160377F",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.102.0"
                }
              },
              "VerifyAuthChallengeResponseCognito": {
                "id": "VerifyAuthChallengeResponseCognito",
                "path": "skgo/UserPoolPasswordless/VerifyAuthChallengeResponseCognito",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "PasswordlessVerifyAuthChallengeResponsePasswordlessA0878D9F",
                        "Arn"
                      ]
                    },
                    "principal": "cognito-idp.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "UserPoolPasswordless1160377F",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.102.0"
                }
              },
              "PreSignUpCognito": {
                "id": "PreSignUpCognito",
                "path": "skgo/UserPoolPasswordless/PreSignUpCognito",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "PasswordlessPreSignupPasswordless4A742C04",
                        "Arn"
                      ]
                    },
                    "principal": "cognito-idp.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "UserPoolPasswordless1160377F",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.102.0"
                }
              },
              "PreTokenGenerationCognito": {
                "id": "PreTokenGenerationCognito",
                "path": "skgo/UserPoolPasswordless/PreTokenGenerationCognito",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "PasswordlessPreTokenPasswordless90BD5377",
                        "Arn"
                      ]
                    },
                    "principal": "cognito-idp.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "UserPoolPasswordless1160377F",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.102.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "skgo/UserPoolPasswordless/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Cognito::UserPool",
                  "aws:cdk:cloudformation:props": {
                    "accountRecoverySetting": {
                      "recoveryMechanisms": [
                        {
                          "name": "verified_phone_number",
                          "priority": 1
                        },
                        {
                          "name": "verified_email",
                          "priority": 2
                        }
                      ]
                    },
                    "adminCreateUserConfig": {
                      "allowAdminCreateUserOnly": true
                    },
                    "autoVerifiedAttributes": [
                      "email"
                    ],
                    "emailVerificationMessage": "The verification code to your new account is {####}",
                    "emailVerificationSubject": "Verify your new account",
                    "lambdaConfig": {
                      "defineAuthChallenge": {
                        "Fn::GetAtt": [
                          "PasswordlessDefineAuthChallengePasswordlessEC6A3147",
                          "Arn"
                        ]
                      },
                      "createAuthChallenge": {
                        "Fn::GetAtt": [
                          "PasswordlessCreateAuthChallengePasswordless51381B62",
                          "Arn"
                        ]
                      },
                      "verifyAuthChallengeResponse": {
                        "Fn::GetAtt": [
                          "PasswordlessVerifyAuthChallengeResponsePasswordlessA0878D9F",
                          "Arn"
                        ]
                      },
                      "preSignUp": {
                        "Fn::GetAtt": [
                          "PasswordlessPreSignupPasswordless4A742C04",
                          "Arn"
                        ]
                      },
                      "preTokenGeneration": {
                        "Fn::GetAtt": [
                          "PasswordlessPreTokenPasswordless90BD5377",
                          "Arn"
                        ]
                      }
                    },
                    "policies": {
                      "passwordPolicy": {
                        "minimumLength": 8,
                        "requireLowercase": true,
                        "requireUppercase": true,
                        "requireNumbers": true,
                        "requireSymbols": true
                      }
                    },
                    "smsVerificationMessage": "The verification code to your new account is {####}",
                    "usernameAttributes": [
                      "email"
                    ],
                    "verificationMessageTemplate": {
                      "defaultEmailOption": "CONFIRM_WITH_CODE",
                      "emailMessage": "The verification code to your new account is {####}",
                      "emailSubject": "Verify your new account",
                      "smsMessage": "The verification code to your new account is {####}"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cognito.CfnUserPool",
                  "version": "2.102.0"
                }
              },
              "UserPoolClientPasswordless": {
                "id": "UserPoolClientPasswordless",
                "path": "skgo/UserPoolPasswordless/UserPoolClientPasswordless",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "skgo/UserPoolPasswordless/UserPoolClientPasswordless/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Cognito::UserPoolClient",
                      "aws:cdk:cloudformation:props": {
                        "accessTokenValidity": 5,
                        "allowedOAuthFlows": [
                          "implicit",
                          "code"
                        ],
                        "allowedOAuthFlowsUserPoolClient": true,
                        "allowedOAuthScopes": [
                          "profile",
                          "phone",
                          "email",
                          "openid",
                          "aws.cognito.signin.user.admin"
                        ],
                        "callbackUrLs": [
                          "https://example.com"
                        ],
                        "explicitAuthFlows": [
                          "ALLOW_CUSTOM_AUTH",
                          "ALLOW_REFRESH_TOKEN_AUTH"
                        ],
                        "generateSecret": false,
                        "idTokenValidity": 5,
                        "preventUserExistenceErrors": "LEGACY",
                        "refreshTokenValidity": 60,
                        "supportedIdentityProviders": [
                          "COGNITO"
                        ],
                        "tokenValidityUnits": {
                          "idToken": "minutes",
                          "accessToken": "minutes",
                          "refreshToken": "minutes"
                        },
                        "userPoolId": {
                          "Ref": "UserPoolPasswordless1160377F"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_cognito.CfnUserPoolClient",
                      "version": "2.102.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_cognito.UserPoolClient",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_cognito.UserPool",
              "version": "2.102.0"
            }
          },
          "CognitoAuthorizerPasswordless": {
            "id": "CognitoAuthorizerPasswordless",
            "path": "skgo/CognitoAuthorizerPasswordless",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "skgo/CognitoAuthorizerPasswordless/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Authorizer",
                  "aws:cdk:cloudformation:props": {
                    "authorizerResultTtlInSeconds": 60,
                    "identitySource": "method.request.header.Authorization",
                    "name": "skgoCognitoAuthorizerPasswordless5C95F7AD",
                    "providerArns": [
                      {
                        "Fn::GetAtt": [
                          "UserPoolPasswordless1160377F",
                          "Arn"
                        ]
                      }
                    ],
                    "restApiId": {
                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                    },
                    "type": "COGNITO_USER_POOLS"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAuthorizer",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.CognitoUserPoolsAuthorizer",
              "version": "2.102.0"
            }
          },
          "ApiGatewayCloudWatchLogsRole": {
            "id": "ApiGatewayCloudWatchLogsRole",
            "path": "skgo/ApiGatewayCloudWatchLogsRole",
            "children": {
              "ImportApiGatewayCloudWatchLogsRole": {
                "id": "ImportApiGatewayCloudWatchLogsRole",
                "path": "skgo/ApiGatewayCloudWatchLogsRole/ImportApiGatewayCloudWatchLogsRole",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.102.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "skgo/ApiGatewayCloudWatchLogsRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "apigateway.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                          ]
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_iam.Role",
              "version": "2.102.0"
            }
          },
          "ApiGatewayAccountSetting": {
            "id": "ApiGatewayAccountSetting",
            "path": "skgo/ApiGatewayAccountSetting",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
              "aws:cdk:cloudformation:props": {
                "cloudWatchRoleArn": {
                  "Fn::GetAtt": [
                    "ApiGatewayCloudWatchLogsRole4E03D2EF",
                    "Arn"
                  ]
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
              "version": "2.102.0"
            }
          },
          "ReqValidator": {
            "id": "ReqValidator",
            "path": "skgo/ReqValidator",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "skgo/ReqValidator/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RequestValidator",
                  "aws:cdk:cloudformation:props": {
                    "name": "req-validator",
                    "restApiId": {
                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                    },
                    "validateRequestBody": true,
                    "validateRequestParameters": true
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRequestValidator",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RequestValidator",
              "version": "2.102.0"
            }
          },
          "CompleteRegistrationModelPasswordless": {
            "id": "CompleteRegistrationModelPasswordless",
            "path": "skgo/CompleteRegistrationModelPasswordless",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "skgo/CompleteRegistrationModelPasswordless/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Model",
                  "aws:cdk:cloudformation:props": {
                    "contentType": "application/json",
                    "description": "Create FIDO2 credential request body",
                    "name": "registerAuthenticatorComplete",
                    "restApiId": {
                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                    },
                    "schema": {
                      "type": "object",
                      "required": [
                        "clientDataJSON_B64",
                        "attestationObjectB64",
                        "friendlyName"
                      ],
                      "properties": {
                        "clientDataJSON_B64": {
                          "type": "string",
                          "minLength": 1
                        },
                        "attestationObjectB64": {
                          "type": "string",
                          "minLength": 1
                        },
                        "friendlyName": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 256
                        },
                        "transports": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "usb",
                              "nfc",
                              "ble",
                              "internal",
                              "hybrid"
                            ]
                          }
                        }
                      },
                      "$schema": "http://json-schema.org/draft-04/schema#"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnModel",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.Model",
              "version": "2.102.0"
            }
          },
          "DeleteCredentialModelPasswordless": {
            "id": "DeleteCredentialModelPasswordless",
            "path": "skgo/DeleteCredentialModelPasswordless",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "skgo/DeleteCredentialModelPasswordless/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Model",
                  "aws:cdk:cloudformation:props": {
                    "contentType": "application/json",
                    "description": "Delete FIDO2 credential request body",
                    "name": "credentialDelete",
                    "restApiId": {
                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                    },
                    "schema": {
                      "type": "object",
                      "required": [
                        "credentialId"
                      ],
                      "properties": {
                        "credentialId": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "$schema": "http://json-schema.org/draft-04/schema#"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnModel",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.Model",
              "version": "2.102.0"
            }
          },
          "UpdateCredentialModelPasswordless": {
            "id": "UpdateCredentialModelPasswordless",
            "path": "skgo/UpdateCredentialModelPasswordless",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "skgo/UpdateCredentialModelPasswordless/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Model",
                  "aws:cdk:cloudformation:props": {
                    "contentType": "application/json",
                    "description": "Update FIDO2 credential request body",
                    "name": "credentialUpdate",
                    "restApiId": {
                      "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                    },
                    "schema": {
                      "type": "object",
                      "required": [
                        "credentialId",
                        "friendlyName"
                      ],
                      "properties": {
                        "credentialId": {
                          "type": "string",
                          "minLength": 1
                        },
                        "friendlyName": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 256
                        }
                      },
                      "$schema": "http://json-schema.org/draft-04/schema#"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnModel",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.Model",
              "version": "2.102.0"
            }
          },
          "Fido2ApiWebACLPasswordless": {
            "id": "Fido2ApiWebACLPasswordless",
            "path": "skgo/Fido2ApiWebACLPasswordless",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::WAFv2::WebACL",
              "aws:cdk:cloudformation:props": {
                "defaultAction": {
                  "allow": {}
                },
                "rules": [
                  {
                    "name": "RateLimitPerIP",
                    "priority": 1,
                    "action": {
                      "block": {}
                    },
                    "visibilityConfig": {
                      "sampledRequestsEnabled": true,
                      "cloudWatchMetricsEnabled": true,
                      "metricName": "RateLimitPerIP"
                    },
                    "statement": {
                      "rateBasedStatement": {
                        "limit": 100,
                        "aggregateKeyType": "FORWARDED_IP",
                        "forwardedIpConfig": {
                          "headerName": "X-Forwarded-For",
                          "fallbackBehavior": "MATCH"
                        }
                      }
                    }
                  }
                ],
                "scope": "REGIONAL",
                "visibilityConfig": {
                  "cloudWatchMetricsEnabled": true,
                  "metricName": "Fido2ApiWebACLPasswordless",
                  "sampledRequestsEnabled": true
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_wafv2.CfnWebACL",
              "version": "2.102.0"
            }
          },
          "WafAssociationPasswordless": {
            "id": "WafAssociationPasswordless",
            "path": "skgo/WafAssociationPasswordless",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::WAFv2::WebACLAssociation",
              "aws:cdk:cloudformation:props": {
                "resourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      "::/restapis/",
                      {
                        "Ref": "PasswordlessRestApiPasswordless3F299C9C"
                      },
                      "/stages/",
                      {
                        "Ref": "PasswordlessRestApiPasswordlessDeploymentStagev1C37D843A"
                      }
                    ]
                  ]
                },
                "webAclArn": {
                  "Fn::GetAtt": [
                    "Fido2ApiWebACLPasswordless",
                    "Arn"
                  ]
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_wafv2.CfnWebACLAssociation",
              "version": "2.102.0"
            }
          },
          "UserPoolId": {
            "id": "UserPoolId",
            "path": "skgo/UserPoolId",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.102.0"
            }
          },
          "UserPoolClientId": {
            "id": "UserPoolClientId",
            "path": "skgo/UserPoolClientId",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.102.0"
            }
          },
          "Fido2Url": {
            "id": "Fido2Url",
            "path": "skgo/Fido2Url",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.102.0"
            }
          },
          "SpaUrl": {
            "id": "SpaUrl",
            "path": "skgo/SpaUrl",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.102.0"
            }
          },
          "SpaBucket": {
            "id": "SpaBucket",
            "path": "skgo/SpaBucket",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.102.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "skgo/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "skgo/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.102.0"
                }
              },
              "Condition": {
                "id": "Condition",
                "path": "skgo/CDKMetadata/Condition",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnCondition",
                  "version": "2.102.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.3.0"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "skgo/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.102.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "skgo/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.102.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.102.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.3.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.102.0"
    }
  }
}